# Значения по умолчанию для test-chart.
# Этот файл YAML используется для задания переменных, которые передаются в шаблоны.

# Количество реплик (подов) для деплоймента.
replicaCount: 1

# Настройки контейнера с образом.
image:
  repository: nginx  # Репозиторий, из которого будет загружен образ контейнера.
  pullPolicy: IfNotPresent  # Политика загрузки образа (загружать только если его нет).
  tag: "latest"  # Тег образа, по умолчанию используется latest.

# Переопределение имени чарта.
nameOverride: ""  # Переопределение имени чарта (если нужно).
fullnameOverride: ""  # Полное переопределение имени чарта.

# Настройки сервисного аккаунта.
serviceAccount:
  create: true  # Создавать ли сервисный аккаунт.
  automount: true  # Автоматически монтировать API-учетные данные для сервисного аккаунта.
  annotations: {}  # Аннотации для сервисного аккаунта.
  name: ""  # Имя сервисного аккаунта (если не указано, генерируется автоматически).

# Аннотации и метки для пода.
podAnnotations: {}  # Аннотации для пода.
podLabels: {}  # Метки для пода.

# Настройки безопасности для пода и контейнеров.
podSecurityContext: {}  # Контекст безопасности для пода (например, настройки пользователя и группы).
securityContext: {}  # Контекст безопасности для контейнеров (например, права доступа).

# Настройки сервиса, который будет создаваться вместе с подом.
service:
  type: NodePort  # Тип сервиса (ClusterIP, NodePort или LoadBalancer).
  port: 14080  # Порт, на котором сервис будет слушать внутри кластера.
  targetPort: 14080  # Порт контейнера, который будет обслуживаться сервисом.
  nodePort: 32000  # Порт на ноде, используется только если тип сервиса NodePort.

# Настройки для проверки здоровья (liveness и readiness probes).
livenessProbe:
  httpGet:
    path: /  # Путь, по которому будет проверяться живучесть контейнера.
    port: 14080  # Порт, на котором будет проверяться живучесть контейнера.
  initialDelaySeconds: 60  # Задержка перед началом проверки.
  periodSeconds: 10  # Интервал между проверками.
  timeoutSeconds: 5
  failureThreshold: 3
readinessProbe:
  httpGet:
    path: /  # Путь, по которому будет проверяться готовность контейнера.
    port: 14080  # Порт, на котором будет проверяться готовность контейнера.
  initialDelaySeconds: 60  # Задержка перед началом проверки.
  periodSeconds: 10  # Интервал между проверками.
  timeoutSeconds: 5
  failureThreshold: 3
# Настройки для авто-масштабирования (autoscaling).
autoscaling:
  enabled: false  # Включено ли авто-масштабирование.
  minReplicas: 1  # Минимальное количество реплик.
  maxReplicas: 100  # Максимальное количество реплик.
  targetCPUUtilizationPercentage: 80  # Процент загрузки CPU для авто-масштабирования.

# Дополнительные настройки.
resources: {}  # Ресурсы (лимиты и запросы) для контейнера.
volumes: []  # Дополнительные volumes для деплоймента.
volumeMounts: []  # Дополнительные точки монтирования для контейнера.

nodeSelector: {}  # Настройки выбора узлов, на которых будет развернут под.
tolerations: []  # Настройки толерантности для узлов.
affinity: {}  # Настройки аффинности (предпочтения) для развертывания пода.

# Настройки Ingress для доступа извне.
ingress:
  enabled: false  # Включать ли Ingress для этого чарта.
  className: ""  # Класс Ingress (например, "nginx").
  annotations: {}  # Аннотации для Ingress.
  hosts:
    - host: chart-example.local  # Хост, через который будет доступен сервис.
      paths:
        - path: /  # Путь для доступа.
          pathType: ImplementationSpecific  # Тип пути.
  tls: []  # Настройки TLS для безопасности доступа.

# Специфические параметры для чарта.
folderPath: /folder1/images  # Путь к папке, которую создаст контейнер busybox.
imageURL: "https://www.interfax.ru/ftproot/photos/photostory/2014/04/04/600dart4.jpg"  # URL изображения для скачивания.
nginxPort: 14080  # Порт, на котором Nginx будет сервировать картинку.
# Название файла изображения.
imageName: image.jpg