apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}-folder-pod
  labels:
    app: {{ .Release.Name }}-folder
spec:
  containers:
    # Контейнер с busybox, который создаёт папку и скачивает изображение
    - name: folder-container
      image: busybox
      command:
        - sh
        - -c
        - |
          # Создание директории, если её не существует, и скачивание изображения по указанному URL
          mkdir -p /mnt/data{{ .Values.folderPath }} && \
          wget -O /mnt/data{{ .Values.folderPath }}/image.jpg {{ .Values.imageURL }} && \
          # Оставляем контейнер в активном состоянии, чтобы он не завершался
          sleep 3600
      volumeMounts:
        # Монтируем volume, чтобы данные сохранялись и были доступны для других контейнеров
        - name: data-volume
          mountPath: /mnt/data

    # Контейнер с nginx, который сервирует скачанное изображение
    - name: nginx
      image: nginx:latest
      command:
        - sh
        - -c
        - |
          # Создаём конфигурацию для Nginx, чтобы он слушал на указанном в values.yaml порту
          echo 'server {
              listen {{ .Values.nginxPort }};
              server_name localhost;

              location / {
                  root /usr/share/nginx/html;
                  index index.html index.htm;
              }
          }' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'
      ports:
        # Определяем порт, на котором контейнер будет слушать (используем значение из values.yaml)
        - containerPort: {{ .Values.nginxPort }}
      volumeMounts:
        # Монтируем тот же volume, чтобы nginx мог сервировать скачанные файлы
        - name: data-volume
          mountPath: /usr/share/nginx/html

  volumes:
    # Объявляем общий volume, который будет использоваться для хранения данных, доступных для обоих контейнеров
    - name: data-volume
      hostPath:
        path: /mnt/data
        type: Directory
